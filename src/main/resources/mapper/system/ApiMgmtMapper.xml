<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dsi.system.api">

	<select id="selectApiTotalCount" parameterType="kr.co.dsi.system.api.dto.ApiReadReqDto" resultType="java.lang.Integer">
		/*
		SQL ID : kr.co.dsi.system.api.selectApiCount
		SQL 명: API 목록 카운트 조회
		*/
		SELECT COUNT(1)
		   FROM (
		SELECT TAT.API_ID
		  FROM dsi.TB_API TAT
     LEFT JOIN dsi.TB_ROLE_API_MAPG TRAAM
		    ON TAT.API_ID = TRAAM.API_ID
     LEFT JOIN dsi.TB_ROLE TR
		    ON TRAAM.ROLE_ID = TR.ROLE_ID
     LEFT JOIN dsi.TB_CD TC
		    ON TAT.API_KD_CD = TC.CD_VLUE
		   AND TC.CD_GRP = 'API_KD_CD'
		 WHERE 1=1
		   AND TAT.DEL_YN = 'N'
		   <if test='searchType != null and searchType != "" and keyword != null and keyword != ""'>
			   <choose>
				   <when test="searchType == 'API_NM'">
						AND TAT.API_NM LIKE CONCAT('%', #{keyword} '%')
				   </when>
				   <when test="searchType == 'ROLE_NM'">
						AND TR.ROLE_NM LIKE CONCAT('%', #{keyword} '%')
				   </when>
				   <when test="searchType == 'API_URL'">
						AND TAT.API_PATH_PTRN LIKE CONCAT('%', #{keyword} '%')
				   </when>
				   <otherwise>
					   AND (
					   	 	 TAT.API_ID LIKE CONCAT('%', #{keyword} '%')
					      OR TR.ROLE_NM LIKE CONCAT('%', #{keyword} '%')
					      OR TAT.API_PATH_PTRN LIKE CONCAT('%', #{keyword} '%')
					   )
				   </otherwise>
			   </choose>
		   </if>
		   <if test='useYn != null and useYn != "" and useYn != "ALL"'>
			   AND TAT.USE_YN = #{useYn}
		   </if>
		   <if test='apiActDivsCd != null and apiActDivsCd != "" and apiActDivsCd != "ALL"'>
			   <choose>
				   <when test="apiActDivsCd == 'GET'">
					   AND TAT.GET_MTHO_USE_YN = 'Y'
				   </when>
				   <when test="apiActDivsCd == 'POST'">
					   AND TAT.POST_MTHO_USE_YN = 'Y'
				   </when>
				   <when test="apiActDivsCd == 'PUT'">
					   AND TAT.PUT_MTHO_USE_YN = 'Y'
				   </when>
				   <when test="apiActDivsCd == 'DELETE'">
					   AND TAT.DEL_MTHO_USE_YN = 'Y'
				   </when>
			   </choose>
		   </if>
		GROUP BY TAT.API_ID, TAT.REG_DT, TAT.API_NM, TAT.API_PATH_PTRN,TC.CD_NM,TAT.USE_YN, TAT.GET_MTHO_USE_YN,TAT.POST_MTHO_USE_YN,TAT.PUT_MTHO_USE_YN,TAT.DEL_MTHO_USE_YN
		) COUNT_LIST
	</select>

	<select id="selectApiList" parameterType="kr.co.dsi.system.api.dto.ApiReadReqDto" resultType="kr.co.dsi.system.api.dto.ApiReadResDto">
		/*
		SQL ID : kr.co.dsi.system.api.selectApiList
		SQL 명: API 목록 조회
		*/
		SELECT ROW_NUMBER() OVER (ORDER BY TAT.REG_DT DESC) AS ROW_NUM
		     , TAT.API_ID
		     , TAT.API_NM              AS API_NAME
			 , TAT.API_PATH_PTRN       AS API_PATH_PATTERN
			 , TC.CD_NM 			   AS API_KIND_NAME
		     , TRIM(TRAILING ',' FROM CONCAT(CASE WHEN TAT.GET_MTHO_USE_YN = 'Y' THEN 'GET,' ELSE '' END, CASE WHEN TAT.POST_MTHO_USE_YN = 'Y' THEN 'POST,' ELSE '' END, CASE WHEN TAT.PUT_MTHO_USE_YN = 'Y' THEN 'PUT,' ELSE '' END, CASE WHEN TAT.DEL_MTHO_USE_YN = 'Y' THEN 'DELETE' ELSE '' END)) AS API_ACT_DIVS_CODE
			 , TAT.USE_YN
			 , GROUP_CONCAT(TR.ROLE_ID)  AS ROLE_ID
		     , GROUP_CONCAT(TR.ROLE_NM) AS ROLE_NM
		     , DATE_FORMAT(TAT.REG_DT, '%Y-%m-%d')          AS REG_DT
		  FROM dsi.TB_API TAT
     LEFT JOIN dsi.TB_ROLE_API_MAPG TRAAM
		    ON TAT.API_ID = TRAAM.API_ID
     LEFT JOIN dsi.TB_ROLE TR
		    ON TRAAM.ROLE_ID = TR.ROLE_ID
     LEFT JOIN dsi.TB_CD TC
		    ON TAT.API_KD_CD = TC.CD_VLUE
		   AND TC.CD_GRP = 'API_KD_CD'
		 WHERE 1=1
		   AND TAT.DEL_YN = 'N'
		   <if test='searchType != null and searchType != "" and keyword != null and keyword != ""'>
			   <choose>
				   <when test="searchType == 'API_NM'">
						AND TAT.API_NM LIKE CONCAT('%', #{keyword} '%')
				   </when>
				   <when test="searchType == 'ROLE_NM'">
						AND TR.ROLE_NM LIKE CONCAT('%', #{keyword} '%')
				   </when>
				   <when test="searchType == 'API_URL'">
						AND TAT.API_PATH_PTRN LIKE CONCAT('%', #{keyword} '%')
				   </when>
				   <otherwise>
					   AND (
					   	 	 TAT.API_ID LIKE CONCAT('%', #{keyword} '%')
					      OR TR.ROLE_NM LIKE CONCAT('%', #{keyword} '%')
					      OR TAT.API_PATH_PTRN LIKE CONCAT('%', #{keyword} '%')
					   )
				   </otherwise>
			   </choose>
		   </if>
		   <if test='useYn != null and useYn != "" and useYn != "ALL"'>
			   AND TAT.USE_YN = #{useYn}
		   </if>
		   <if test='apiActDivsCd != null and apiActDivsCd != "" and apiActDivsCd != "ALL"'>
			   <choose>
				   <when test="apiActDivsCd == 'GET'">
					   AND TAT.GET_MTHO_USE_YN = 'Y'
				   </when>
				   <when test="apiActDivsCd == 'POST'">
					   AND TAT.POST_MTHO_USE_YN = 'Y'
				   </when>
				   <when test="apiActDivsCd == 'PUT'">
					   AND TAT.PUT_MTHO_USE_YN = 'Y'
				   </when>
				   <when test="apiActDivsCd == 'DELETE'">
					   AND TAT.DEL_MTHO_USE_YN = 'Y'
				   </when>
			   </choose>
		   </if>
		GROUP BY TAT.API_ID, TAT.REG_DT, TAT.API_NM, TAT.API_PATH_PTRN,TC.CD_NM,TAT.USE_YN, TAT.GET_MTHO_USE_YN,TAT.POST_MTHO_USE_YN,TAT.PUT_MTHO_USE_YN,TAT.DEL_MTHO_USE_YN
		LIMIT #{rowStart}, #{limit}
	</select>

	<select id="selectApi" parameterType="String" resultType="kr.co.dsi.system.api.dto.ApiReadResDto">
        /*
        SQL ID : kr.co.dsi.system.api.ApiDao.selectApi
        SQL 명: API 단건 조회
        */
        SELECT TAT.API_ID
        , TAT.API_NM AS API_NAME
        , TAT.API_PATH_PTRN AS API_PATH_PATTERN
        , TAT.API_KD_CD AS API_KIND_CODE
        , TC.CD_NM AS API_KIND_NAME
        , TRIM(TRAILING ',' FROM CONCAT(CASE WHEN TAT.GET_MTHO_USE_YN = 'Y' THEN 'GET,' ELSE '' END, CASE WHEN
        TAT.POST_MTHO_USE_YN = 'Y' THEN 'POST,' ELSE '' END, CASE WHEN TAT.PUT_MTHO_USE_YN = 'Y' THEN 'PUT,' ELSE ''
        END, CASE WHEN TAT.DEL_MTHO_USE_YN = 'Y' THEN 'DELETE' ELSE '' END)) AS API_ACT_DIVS_CODE
        , TAT.USE_YN
		, GROUP_CONCAT(TR.ROLE_ID) AS ROLE_ID
		, GROUP_CONCAT(TR.ROLE_NM) AS ROLE_NM
		, CONCAT(TAT.REG_USER_ID, ' / ', DATE_FORMAT(TAT.REG_DT, '%Y-%m-%d')) AS CREATE_INFO
		, IF(TAT.REG_DT=TAT.UPD_DT, NULL, CONCAT(TAT.UPD_USER_ID, ' / ', DATE_FORMAT(TAT.UPD_DT, '%Y-%m-%d')))   AS UPDATE_INFO
		, TAT.AUDT_TRGT_YN AS AUDIT_TARGET_YN
        FROM dsi.TB_API TAT
        LEFT JOIN dsi.TB_ROLE_API_MAPG TRAAM
        ON TAT.API_ID = TRAAM.API_ID
        LEFT JOIN dsi.TB_ROLE TR
        ON TRAAM.ROLE_ID = TR.ROLE_ID
        LEFT JOIN dsi.TB_CD TC
        ON TAT.API_KD_CD = TC.CD_VLUE
        AND TC.CD_GRP = 'API_KD_CD'
        WHERE 1=1
        AND TAT.API_ID = #{apiId}
        AND TAT.DEL_YN = 'N'
        group by TAT.API_ID	, API_NM, API_PATH_PTRN, API_KD_CD, CD_NM, GET_MTHO_USE_YN, POST_MTHO_USE_YN, PUT_MTHO_USE_YN, DEL_MTHO_USE_YN, USE_YN, AUDT_TRGT_YN
	</select>

	<insert id="insertApi" parameterType="kr.co.dsi.system.api.dto.ApiCreateReqDto">
        /*
        SQL ID :kr.co.dsi.system.api.dao.ApiDao.insertApi
        SQL 명: api 등록
        */
		<selectKey keyProperty="apiId" keyColumn="API_ID" resultType="java.lang.String" order="BEFORE">
			SELECT CONCAT('API_', LPAD(dsi.nextval('TB_API'), 10, '0'))
		</selectKey>
		INSERT INTO	dsi.TB_API(
			API_ID,
			API_KD_CD,
			API_PATH_PTRN,
			GET_MTHO_USE_YN,
			POST_MTHO_USE_YN,
			PUT_MTHO_USE_YN,
			DEL_MTHO_USE_YN,
			USE_YN,
			DEL_YN,
			API_NM,
			AUDT_TRGT_YN,
			REG_DT,
			REG_USER_ID,
			UPD_DT,
			UPD_USER_ID
		) VALUES(
		#{apiId},
		#{apiKindCode},
		#{apiPathPattern},
		#{getMthoUseYn},
		#{postMthoUseYn},
		#{putMthoUseYn},
		#{delMthoUseYn},
		#{useYn},
		'N',
		#{apiName},
		#{auditTargetYn},
		CURRENT_TIMESTAMP,
		#{loginUserId},
		CURRENT_TIMESTAMP,
		#{loginUserId})
    </insert>

	<insert id="insertApiRoleMapg" parameterType="kr.co.dsi.system.api.dto.ApiRoleCreateReqDto">
        /*
        SQL ID :kr.co.dsi.system.api.dao.ApiDao.insertApi
        SQL 명: 권한 API 매핑 정보 저장
        */
        INSERT INTO dsi.TB_ROLE_API_MAPG(
        API_ID,
        ROLE_ID,
        REG_DT,
        REG_USER_ID,
        UPD_DT,
        UPD_USER_ID
        ) VALUES (
        #{apiId},
        #{roleId},
        CURRENT_TIMESTAMP,
        #{loginUserId},
        CURRENT_TIMESTAMP,
        #{loginUserId}
        )
    </insert>

	<update id="updateApi" parameterType="kr.co.dsi.system.api.dto.ApiUpdateReqDto">
        /*
        SQL ID :kr.co.dsi.system.api.dao.ApiDao.insertApi
        SQL 명: API 수정
        */
        UPDATE dsi.TB_API
        SET
        GET_MTHO_USE_YN = #{getMthoUseYn},
        POST_MTHO_USE_YN = #{postMthoUseYn},
        PUT_MTHO_USE_YN = #{putMthoUseYn},
        DEL_MTHO_USE_YN = #{delMthoUseYn},
        USE_YN = #{useYn},
        API_NM = #{apiName},
        AUDT_TRGT_YN = #{auditTargetYn},
        UPD_DT = CURRENT_TIMESTAMP,
        UPD_USER_ID = #{loginUserId}
        WHERE
        API_ID = #{apiId}
        AND API_KD_CD = #{apiKindCode}
        AND API_PATH_PTRN = #{apiPathPattern}
    </update>

	<delete id="deleteRoleApiMapg" parameterType="kr.co.dsi.system.api.dto.ApiRoleCreateReqDto">
        /*
        SQL ID :kr.co.dsi.system.api.dao.ApiDao.insertApi
        SQL 명: API 권한 매핑 정보 삭제
        */
        DELETE FROM dsi.TB_ROLE_API_MAPG
        WHERE API_ID=#{apiId}
    </delete>

	<update id="deleteApi" parameterType="kr.co.dsi.system.api.dto.ApiUpdateReqDto">
        /*
        SQL ID :kr.co.dsi.system.api.dao.ApiDao.insertApi
        SQL 명: API 삭제
        */
        UPDATE dsi.TB_API
        SET DEL_YN = 'Y',
        UPD_DT = CURRENT_TIMESTAMP,
        UPD_USER_ID = #{loginUserId}
        WHERE
        API_ID = #{apiId}
        AND API_KD_CD = #{apiKindCode}
        AND API_PATH_PTRN = #{apiPathPattern}
    </update>
</mapper>