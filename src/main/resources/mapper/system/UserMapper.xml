<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dsi.system.user">

	<sql id="userSelect">
		SELECT
			  ROW_NUMBER() OVER(ORDER BY USER.CREATE_DATE) AS ROW_NUM
			, USER.USER_ID
			, USER.USE_YN
			, USER.USER_NM
			, USER.CREATE_DATE
			, USER.CREATE_USER_ID
			, USER.UPDATE_DATE
			, USER.UPDATE_USER_ID
		    , USER.BAS_BRCH
		    , USER.LTNO_CITY_NM
			, USER.LTNO_SGG_NM
			, USER.LTNO_EMD_NM
		    , USER.EMPLOYEE_NUM
			, USER.ROLE_NAME
			, USER.ROLE_ID
			, USER.STAT_CD
			, USER.STAT_CD_NM
		FROM (
			SELECT
				  U.USER_ID
				, U.USE_YN
				, U.USER_NM
				, DATE_FORMAT(U.REG_DT, '%Y-%m-%d')  AS CREATE_DATE
				, U.REG_USER_ID AS CREATE_USER_ID
				, DATE_FORMAT(U.UPD_DT, '%Y-%m-%d')  AS UPDATE_DATE
				, U.UPD_USER_ID                      AS UPDATE_USER_ID
				, U.BAS_BRCH
				, CITY.CD_NM                         AS LTNO_CITY_NM
				, COUNTY.CD_NM                       AS LTNO_SGG_NM
				, DISTRICT.CD_NM                     AS LTNO_EMD_NM
			    , U.EMPNUM                           AS EMPLOYEE_NUM
				, A.ROLE_NM                          AS ROLE_NAME
				, A.ROLE_ID
				, U.STAT_CD
				, CODE.CD_NM                         AS STAT_CD_NM
			FROM TB_USER U
			LEFT JOIN TB_ROLE_USER_MAPG AUM
				ON U.USER_ID = AUM.USER_ID
			LEFT JOIN TB_ROLE A
				ON AUM.ROLE_ID = A.ROLE_ID
			LEFT JOIN TB_CD CODE
				ON U.STAT_CD = CODE.CD
					AND CODE.CD_GRP = 'STUS_CD'
			LEFT JOIN TB_CD CITY
					  ON U.LTNO_CITY_NM = CITY.CD
			LEFT JOIN TB_CD COUNTY
					  ON U.LTNO_SGG_NM = COUNTY.CD
			LEFT JOIN TB_CD DISTRICT
					  ON U.LTNO_EMD_NM = DISTRICT.CD
			WHERE 1=1
	</sql>

	<sql id="userSearch">
		<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
			<choose>
				<when test="searchType == 'ALL'">
					AND (
						U.USER_NM LIKE CONCAT('%', REGEXP_REPLACE(#{keyword}, '(\_|\%)', '\\\\\\1'), '%') OR
						U.USER_ID LIKE CONCAT('%', REGEXP_REPLACE(#{keyword}, '(\_|\%)', '\\\\\\1'), '%')
					)
				</when>
				<when test="searchType == 'USER_NAME'">
					AND U.USER_NM LIKE CONCAT('%', REGEXP_REPLACE(#{keyword}, '(\_|\%)', '\\\\\\1'), '%')
				</when>
				<when test="searchType == 'USER_ID'">
					AND U.USER_ID LIKE CONCAT('%', REGEXP_REPLACE(#{keyword}, '(\_|\%)', '\\\\\\1'), '%')
				</when>
			</choose>
		</if>
		<if test="statCd != null and statCd != ''">
			<choose>
				<when test="statCd == 'ALL'"/>
				<when test="statCd == 'ACTIVE'">
					AND STAT_CD = 'ACTIVE'
				</when>
				<when test="statCd == 'INACTIVE'">
					AND STAT_CD = 'INACTIVE'
				</when>
			</choose>
		</if>
	</sql>

	<select id="selectUserTotalCount" parameterType="kr.co.dsi.system.user.dto.req.UserSearchReqDto" resultType="java.lang.Integer">
		/*
		SQL ID : kr.co.dsi.system.user.selectUserTotalCount
		SQL 명: 단일 사용자 또는 목록 카운트 조회(관리자 용도)
		*/
		SELECT COUNT(TB.ROW_NUM)
			FROM (
				<include refid="userSelect"/>
				<include refid="userSearch"/>
			) USER ) TB
	</select>

	<select id="selectUserList" parameterType="kr.co.dsi.system.user.dto.req.UserSearchReqDto" resultType="kr.co.dsi.system.user.dto.res.UserReadResDto">
		/*
		SQL ID : kr.co.dsi.system.user.selectUserList
		SQL 명: 단일 사용자 또는 목록 조회(관리자 용도)
		*/
		<include refid="userSelect"/>
		<include refid="userSearch"/>
		) USER
		ORDER BY ROW_NUM
		LIMIT #{rowStart}, #{limit}		
	</select>

	<select id="selectUser" parameterType="java.lang.String" resultType="kr.co.dsi.system.user.dto.res.UserReadResDto">
		/*
		SQL ID : kr.co.dsi.system.user.selectUser
		SQL 명: 단일 사용자 또는 목록 조회(관리자 용도)
		*/
		SELECT
			  ROW_NUMBER() OVER(ORDER BY USER.CREATE_DATE) AS NUM
			, USER.USER_ID
			, USER.USE_YN
			, USER.USER_NM
			, USER.CREATE_DATE
			, USER.CREATE_USER_ID
			, USER.UPDATE_DATE
			, USER.UPDATE_USER_ID
			, USER.BAS_BRCH
		    , USER.BAS_BRCH_NM
			, USER.LTNO_CITY_NM
		    , USER.LTNO_CITY_CODE
			, USER.LTNO_SGG_NM
		    , USER.LTNO_SGG_CODE
			, USER.LTNO_EMD_NM
		    , USER.LTNO_EMD_CODE
			, USER.EMPLOYEE_NUM
			, USER.ROLE_NAME
			, USER.ROLE_ID
			, USER.STAT_CD
			, USER.STAT_CD_NM
		FROM (
			SELECT
				  U.USER_ID
				, U.USE_YN
				, U.USER_NM
				, DATE_FORMAT(U.REG_DT, '%Y-%m-%d')  AS CREATE_DATE
				, U.REG_USER_ID                      AS CREATE_USER_ID
				, DATE_FORMAT(U.UPD_DT, '%Y-%m-%d')  AS UPDATE_DATE
				, U.UPD_USER_ID                      AS UPDATE_USER_ID
				, U.BAS_BRCH
			    , BRCH.CD_NM                         AS BAS_BRCH_NM
				, CITY.CD_NM                         AS LTNO_CITY_NM
				, CITY.CD                            AS LTNO_CITY_CODE
				, COUNTY.CD_NM                       AS LTNO_SGG_NM
			    , COUNTY.CD                          AS LTNO_SGG_CODE
				, DISTRICT.CD_NM                     AS LTNO_EMD_NM
			    , DISTRICT.CD                        AS LTNO_EMD_CODE
				, U.EMPNUM                           AS EMPLOYEE_NUM
				, A.ROLE_NM                          AS ROLE_NAME
				, A.ROLE_ID
				, U.STAT_CD
				, CODE.CD_NM                         AS STAT_CD_NM
			FROM TB_USER U
			LEFT JOIN TB_ROLE_USER_MAPG AUM
				ON U.USER_ID = AUM.USER_ID
			LEFT JOIN TB_ROLE A
				ON AUM.ROLE_ID = A.ROLE_ID
			LEFT JOIN TB_CD CODE
				ON U.STAT_CD = CODE.CD
					AND CODE.CD_GRP = 'STUS_CD'
			LEFT JOIN TB_CD BRCH
			ON BRCH.CD = U.BAS_BRCH
			    AND BRCH.CD_GRP = 'BRCH_CD'
			LEFT JOIN TB_CD CITY
				ON U.LTNO_CITY_NM = CITY.CD
			    AND CITY.CD_GRP = BRCH.CD
			LEFT JOIN TB_CD COUNTY
				ON U.LTNO_SGG_NM = COUNTY.CD
			LEFT JOIN TB_CD DISTRICT
				ON U.LTNO_EMD_NM = DISTRICT.CD
		<where>
				AND U.USER_ID = #{userId}
		</where>) USER
	</select>

	<insert id="insertUser" parameterType="kr.co.dsi.system.user.dto.req.UserCreateReqDto">
        /*
        SQL ID : kr.co.dsi.system.user.insertUser
        SQL 명: 사용자 추가(풀수 컬럼만)
        */
        INSERT INTO TB_USER (
		USER_ID
        , USER_NM
        , PSWD
        , BAS_BRCH
		, LTNO_CITY_NM
		, LTNO_SGG_NM
		, LTNO_EMD_NM
        , STAT_CD
        , REG_DT
        , REG_USER_ID
        )
        VALUES (
        #{userId, jdbcType=VARCHAR}
        , #{userNm, jdbcType=VARCHAR}
        , #{pswd, jdbcType=VARCHAR}
        , #{basBrch, jdbcType=VARCHAR}
	    , #{ltnoCityNm, jdbcType=VARCHAR}
	    , #{ltnoSggNm, jdbcType=VARCHAR}
	    , #{ltnoEmdNm, jdbcType=VARCHAR}
	    , #{statCd, jdbcType=VARCHAR}
        , CURRENT_TIMESTAMP()
        , #{regUserId, jdbcType=VARCHAR}
        )
    </insert>

	<update id="updateUser" parameterType="kr.co.dsi.system.user.dto.req.UserUpdateReqDto">
		/*
		SQL ID : kr.co.dsi.system.user.updateUser
		SQL 명: 사용자 정보 수정
		*/
		UPDATE TB_USER
		<set>
			<if test="userNm != null">
				USER_NM = #{userNm, jdbcType=VARCHAR},
			</if>
			<if test="statCd != null">
				STAT_CD = #{statCd, jdbcType=VARCHAR},
			</if>
			<if test="basBrch != null">
				BAS_BRCH = #{basBrch, jdbcType=VARCHAR},
			</if>
			<if test="ltnoCityNm != null">
				LTNO_CITY_NM = #{ltnoCityNm, jdbcType=VARCHAR},
			</if>
			<if test="ltnoSggNm != null">
				LTNO_SGG_NM = #{ltnoSggNm, jdbcType=VARCHAR},
			</if>
			<if test="ltnoEmdNm != null">
				LTNO_EMD_NM = #{ltnoEmdNm, jdbcType=VARCHAR},
			</if>
			UPD_DT = CURRENT_TIMESTAMP(),
			UPD_USER_ID = #{updUserId, jdbcType=VARCHAR},
		</set>
		WHERE USER_ID = #{userId, jdbcType=VARCHAR}
	</update>

	<update id="updateUserPwd" parameterType="kr.co.dsi.system.user.dto.req.UserUpdatePswdReqDto">
		/*
		SQL ID : kr.co.dsi.system.user.updateUserPwd
		SQL 명: 사용자 패스워드 수정
		*/
		UPDATE TB_USER
		<set>
			<if test="pswd != null">
				PSWD = #{pswd, jdbcType=VARCHAR},
			</if>
			UPD_DT = CURRENT_TIMESTAMP(),
			UPD_USER_ID = #{updUserId, jdbcType=VARCHAR},
		</set>
		WHERE USER_ID = #{userId, jdbcType=VARCHAR}
	</update>

	<delete id="deleteUser" parameterType="java.lang.String">
		/*
		SQL ID : kr.co.dsi.system.user.deleteUser
		SQL 명: 사용자 정보 삭제
		*/
		DELETE FROM TB_USER
		<where>
			USER_ID = #{userId, jdbcType=VARCHAR}
		</where>
	</delete>

	<select id="checkDuplicateUser" parameterType="java.lang.String" resultType="java.lang.String">
        /*
        SQL ID : kr.co.dsi.system.user.checkUser
        SQL 명: 사용자정보에 이미 동일한 아이디가 있는지 체크한다.
        */
        SELECT
        A.USER_ID
        FROM TB_USER A
        WHERE
        A.USER_ID = #{userId}
    </select>

	<delete id="deleteRoleUser" parameterType="java.lang.String">
        /*
        SQL ID : kr.co.dsi.system.user.deleteRoleUser
        SQL 명: 고객사 사용자 역할 삭제
        */
        DELETE FROM TB_ROLE_USER_MAPG
        WHERE USER_ID = #{userId, jdbcType=VARCHAR}
    </delete>

	<insert id="insertRoleUser" parameterType="kr.co.dsi.system.user.dto.req.UserCreateReqDto">
        /*
        SQL ID : kr.co.dsi.system.user.insertRoleUser
        SQL 명: 사용자 역할 추가
        */
        INSERT INTO TB_ROLE_USER_MAPG
        (
        USER_ID,
        ROLE_ID,
        REG_DT,
        REG_USER_ID,
        UPD_DT,
        UPD_USER_ID
        )
        VALUES(
        #{userId}
        , #{roleId}
        , CURRENT_TIMESTAMP()
        , #{regUserId}
        , CURRENT_TIMESTAMP()
        , #{regUserId}
        )
    </insert>

	<delete id="deleteRoleUser2" parameterType="java.lang.String">
        /*
        SQL ID : kr.co.dsi.system.user.deleteRoleUser
        SQL 명: 사용자 역할 삭제(user id, cuco id 조건)
        */
        DELETE FROM TB_ROLE_USER_MAPG
        WHERE USER_ID = #{userId}
    </delete>

	<update id="updateRoleUser" parameterType="kr.co.dsi.system.user.dto.RoleUserMapgDto">
        /*
        SQL ID : kr.co.dsi.system.user.updateRoleUser
        SQL 명: 사용자 역할 업데이트
        */
        UPDATE TB_ROLE_USER_MAPG
        SET ROLE_ID = #{roleId}
        WHERE USER_ID = #{userId}
    </update>

	<sql id="roleUserSelect">
		SELECT
		ROW_NUMBER() OVER(ORDER BY TU.REG_DT) AS ROW_NUM
		, TU.USER_ID
		, TU.USER_NM
		, TR.ROLE_NM
		FROM TB_USER TU
		LEFT JOIN TB_ROLE_USER_MAPG TRUM
		ON TRUM.USER_ID = TU.USER_ID
		LEFT JOIN TB_ROLE TR
		ON TR.ROLE_ID = TRUM.ROLE_ID
	</sql>

	<sql id="roleUserSearch">
		<where>
			<if test="searchType == 'userId'">
				AND U.USER_ID LIKE CONCAT('%', REGEXP_REPLACE(#{keyword}, '(\_|\%)', '\\\\\\1'), '%')
			</if>
			<if test="searchType == 'userNm'">
				AND U.USER_NM LIKE CONCAT('%', REGEXP_REPLACE(#{keyword}, '(\_|\%)', '\\\\\\1'), '%')
			</if>
		</where>
	</sql>

	<select id="selectRoleUserList" parameterType="kr.co.dsi.system.user.dto.req.RoleUserSearchReqDto"
			resultType="kr.co.dsi.system.user.dto.res.RoleUserReadResDto">
		/*
		SQL ID : kr.co.dsi.system.user.selectRoleUserList
		SQL 명: 사용자 역할 조회
		*/
		<include refid="roleUserSelect"/>
		<include refid="roleUserSearch"/>
		ORDER BY TU.REG_DT
		LIMIT #{rowStart}, #{limit}
	</select>

	<select id="selectRoleUserTotalCount" parameterType="kr.co.dsi.system.user.dto.req.RoleUserSearchReqDto"
			resultType="java.lang.Integer">
		/*
		SQL ID : kr.co.dsi.system.user.selectRoleUserTotalCount
		SQL 명: 사용자 역할 조회(Count)
		*/
		SELECT COUNT(TB.USER_ID)
		FROM
		(
		<include refid="roleUserSelect"/>
		<include refid="roleUserSearch"/>
		ORDER BY TU.REG_DT) TB
	</select>

	<select id="selectCucoUserMasterYn"
		parameterType="java.lang.String"
		resultType="java.lang.String">
		/**
		* SQL ID : co.kr.rp.mgmt.dao.CucoDao.selectCucoUserMasterYn
		* SQL 명: 고객사 사용자 마스터 여부 조회
		*/
		SELECT SYS_MNGR_YN
		FROM TB_USER
		WHERE USER_ID = #{userId, jdbcType=VARCHAR}
	</select>
	
</mapper>