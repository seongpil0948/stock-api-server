<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dsi.system.cd.dao.CdDao">

	<select id="selectCdCount" parameterType="kr.co.dsi.system.cd.dto.req.CdReadReqDto" resultType="java.lang.Integer">
		/*
		SQL ID : co.kr.rp.mgmt.cd.dao.selectCd
		SQL 명: 공통 코드 조회
		*/
		SELECT
			COUNT(*)
		FROM TB_CD a
		INNER JOIN TB_CD_GRP cdgrp on a.cd_grp = cdgrp.cd_grp
		LEFT OUTER JOIN TB_USER us1 on a.reg_user_id = us1.user_id
		LEFT OUTER JOIN TB_USER us2 on a.upd_user_id = us2.user_id
		WHERE 1=1
		<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
			<choose>
				<when test="searchType == 'ALL'">
					AND (
						 a.cd LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%') OR
						 a.cd_nm LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%') OR
						 a.cd_vlue LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
						)
				</when>
				<when test="searchType == 'code'">
					AND a.cd LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
				<when test="searchType == 'codeNm'">
					AND a.cd_nm LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
				<when test="searchType == 'codeVal'">
					AND a.cd_vlue LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
			</choose>
		</if>
		<if test="codeGroup != null and codeGroup != ''">
			AND a.cd_grp = #{codeGroup}
		</if>
		<if test="useYn != null and useYn != ''">
			<choose>
				<when test="useYn == 'ALL'">
				</when>
				<otherwise>
					AND a.use_yn = #{useYn}
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="selectCdList" parameterType="kr.co.dsi.system.cd.dto.req.CdReadReqDto" resultType="kr.co.dsi.system.cd.dto.res.CdReadResDto">
		/*
		SQL ID : co.kr.rp.mgmt.cd.dao.selectCd
		SQL 명: 공통 코드 조회
		*/
		WITH CD AS (
		SELECT
			a.cd_id as code_id /* 코드 아이디*/
			,a.cd as code /* 코드 */
			,a.cd_grp as code_group /* 코드 그룹 */
			,cdgrp.cd_grp_nm as code_group_name /* 코드 그룹 명 */
			,a.cd_vlue as code_value /* 코드 값 */
			,a.cd_dscr as code_description /* 코드 설명 */
			,a.cd_idx as code_index /* 코드 순서 */
			,a.use_yn /* 사용 여부 */
			,date_format(a.reg_dt, '%Y-%m-%d %H:%i') as create_date /* 생성 일시 */
			,a.reg_user_id as create_user_id /* 생성자 아이디 */
			,date_format(a.upd_dt, '%Y-%m-%d %H:%i') as update_date /* 수정 일시 */
			,a.upd_user_id as update_user_id /* 수정자 아이디 */
			,us1.user_nm as create_user_name /* 생성자 명 */
			,us2.user_nm as update_user_name /* 수정자 명 */
		FROM TB_CD a
		INNER JOIN TB_CD_GRP cdgrp on a.cd_grp = cdgrp.cd_grp
		LEFT OUTER JOIN TB_USER us1 on a.reg_user_id = us1.user_id
		LEFT OUTER JOIN TB_USER us2 on a.upd_user_id = us2.user_id
		WHERE 1=1
		<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
			<choose>
				<when test="searchType == 'ALL'">
		    		AND (a.cd LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%','\\%'), '%') OR
					a.cd_nm LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%') OR
					a.cd_vlue LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
					)
				</when>
				<when test="searchType == 'code'">
					AND a.cd LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
				<when test="searchType == 'codeNm'">
					AND a.cd_nm LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
				<when test="searchType == 'codeVal'">
					AND a.cd_vlue LIKE CONCAT('%',REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
			</choose>
		</if>
		<if test="codeGroup != null and codeGroup != ''">
			AND a.cd_grp = #{codeGroup}
		</if>
		<if test="useYn != null and useYn != ''">
			<choose>
				<when test="useYn == 'ALL'">
				</when>
				<otherwise>
					AND a.USE_YN = #{useYn}
				</otherwise>
			</choose>
		</if>
		ORDER BY a.cd_idx ASC, a.reg_dt DESC
		<if test='!"N".equals(pageYn)'>
			LIMIT #{rowStart}, #{limit}
		</if>
		)
		SELECT 	code_id /* 코드 아이디*/
			, code /* 코드 */
			, code_group /* 코드 그룹 */
			, code_group_name /* 코드 그룹 명 */
			, T.trans_msg as code_name /* 코드 명 */
			, code_value /* 코드 값 */
			, code_description /* 코드 설명 */
			, code_index /* 코드 순서 */
			, use_yn /* 사용 여부 */
			, create_date /* 생성 일시 */
			, create_user_id /* 생성자 아이디 */
			, update_date /* 수정 일시 */
			, update_user_id /* 수정자 아이디 */
			, create_user_name /* 생성자 명 */
			, update_user_name /* 수정자 명 */
			, T.LOCALE_CD
		FROM CD
		LEFT OUTER JOIN TB_TRANS T ON CD.CODE_ID = T.LNK_ID
		ORDER BY CD.code_index ASC, CD.create_date DESC

	</select>

	<select id="selectCd" parameterType="kr.co.dsi.system.cd.dto.req.CdReadReqDto" resultType="kr.co.dsi.system.cd.dto.res.CdReadResDto">
		/*
		SQL ID : co.kr.rp.mgmt.cd.dao.selectCd
		SQL 명: 공통 코드 조회
		*/
		SELECT
			 a.cd_id as code_id
			,a.cd as code                               /* 코드 */
			,a.cd_grp as code_group                    /* 코드 그룹 */
			,cdgrp.cd_grp_nm as code_group_name        /* 코드 그룹 명 */
			,T.trans_msg as code_name                      /* 코드 명 */
			,a.cd_vlue as code_value                    /* 코드 값 */
			,a.cd_dscr as code_description            /* 코드 설명 */
			,a.cd_idx as code_index                    /* 코드 순서 */
			,a.use_yn                                  /* 사용 여부 */
			,date_format(a.reg_dt, '%Y-%m-%d %H:%i') as create_date			/* 생성 일시	*/
			,a.reg_user_id as create_user_id           /* 생성자 아이디 */
			,date_format(a.upd_dt, '%Y-%m-%d %H:%i') as update_date			/* 수정 일시	*/
			,a.upd_user_id as update_user_id            /* 수정자 아이디 */
			,us1.user_nm as create_user_name            /* 생성자 명 */
			,us2.user_nm as update_user_name            /* 수정자 명 */
		FROM TB_CD a
		INNER JOIN TB_CD_GRP cdgrp on a.cd_grp = cdgrp.cd_grp
		LEFT OUTER JOIN TB_USER us1 on a.reg_user_id = us1.user_id
		LEFT OUTER JOIN TB_USER us2 on a.upd_user_id = us2.user_id
		LEFT OUTER JOIN TB_TRANS T ON a.CD_ID = T.LNK_ID
		<where>
			<if test="code != null">
				AND a.cd = #{code}
			</if>
			AND a.cd_grp = #{codeGroup}
			AND T.LOCALE_CD = #{localeCd}
		</where>
	</select>

	<select id="selectCdGrpCount" parameterType="kr.co.dsi.system.cd.dto.req.CdGrpReadReqDto" resultType="java.lang.Integer">
		/*
		SQL ID : co.kr.rp.mgmt.cd.dao.selectCdGrp
		SQL 명: 공통 코드 그룹 조회(관리자 용도)
		*/
		SELECT
			COUNT(*)
		FROM TB_CD_GRP a
		LEFT OUTER JOIN TB_USER us1 on a.reg_user_id = us1.user_id
		LEFT OUTER JOIN TB_USER us2 on a.upd_user_id = us2.user_id
		WHERE 1=1
		<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
			<choose>
				<when test="searchType == 'ALL'">
					AND (
						 a.cd_grp LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%') OR
						 a.cd_grp_nm LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
						)
				</when>
				<when test="searchType == 'codeGroup'">
					AND a.cd_grp LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
				<when test="searchType == 'codeGroupNm'">
					AND a.cd_grp_nm LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
			</choose>
		</if>
		<if test="useYn != null and useYn != ''">
			<choose>
				<when test="useYn == 'ALL'">
				</when>
				<otherwise>
					AND a.use_yn = #{useYn}
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="selectCdGrpList" parameterType="kr.co.dsi.system.cd.dto.req.CdGrpReadReqDto" resultType="kr.co.dsi.system.cd.dto.res.CdGrpReadResDto">
		/*
		SQL ID : co.kr.rp.mgmt.cd.dao.selectCdGrp
		SQL 명: 공통 코드 그룹 조회(관리자 용도)
		*/
		SELECT
			a.cd_grp_id as code_group_id
			, a.cd_grp as code_group                         /* 코드 그룹 */
			,a.cd_grp_nm as code_group_name                /* 코드 그룹명 */
			,a.cd_grp_dscr as code_group_description      /* 코드 그룹 설명 */
			,a.use_yn                                      /* 사용 여부 */
			,date_format(a.reg_dt, '%Y-%m-%d %H:%i') as create_date			/* 생성 일시	*/
			,a.reg_user_id as create_user_id               /* 생성자 아이디 */
			,a.hpos_cd_grp as parent_code_group             /* 상위 코드 그룹 아이디 */
			,date_format(a.upd_dt, '%Y-%m-%d %H:%i') as update_date			/* 수정 일시	*/
			,a.upd_user_id as update_user_id                /* 수정자 아이디 */
			,us1.user_nm as create_user_name                /* 생성자 명 */
			,us2.user_nm as update_user_name                /* 수정자 명 */
		FROM TB_CD_GRP a
		LEFT OUTER JOIN TB_USER us1 on a.reg_user_id = us1.user_id
		LEFT OUTER JOIN TB_USER us2 on a.upd_user_id = us2.user_id
		WHERE 1=1
		<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
			<choose>
				<when test="searchType == 'ALL'">
					AND (
						 a.cd_grp LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%') OR
						 a.cd_grp_nm LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
						)
				</when>
				<when test="searchType == 'codeGroup'">
					AND a.cd_grp LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
				<when test="searchType == 'codeGroupNm'">
					AND a.cd_grp_nm LIKE CONCAT('%', REPLACE(REPLACE(#{keyword}, '_', '\\_'), '%', '\\%'), '%')
				</when>
			</choose>
		</if>
		<if test="useYn != null and useYn != ''">
			<choose>
				<when test="useYn == 'ALL'">
				</when>
				<otherwise>
					AND a.USE_YN = #{useYn}
				</otherwise>
			</choose>
		</if>
		ORDER BY a.REG_DT DESC
		LIMIT #{rowStart}, #{limit}
	</select>

	<select id="selectCdGrp" parameterType="kr.co.dsi.system.cd.dto.req.CdGrpReadReqDto" resultType="kr.co.dsi.system.cd.dto.res.CdGrpReadResDto">
		/*
		SQL ID : co.kr.rp.mgmt.cd.dao.selectCdGrp
		SQL 명: 공통 코드 그룹 조회(관리자 용도)
		*/
		SELECT
		a.cd_grp_id as code_group_id
			,a.cd_grp as code_group                         /* 코드 그룹 */
		<if test="localeCd != null and localeCd != ''">
		    , t.TRANS_MSG as code_group_name
		</if>
		<if test="localeCd == null or localeCd == ''">
 			,a.cd_grp_nm as code_group_name                /* 코드 그룹명 */
		</if>
			,a.cd_grp_dscr as code_group_description      /* 코드 그룹 설명 */
			,a.use_yn                                      /* 사용 여부 */
			,date_format(a.reg_dt, '%Y-%m-%d %H:%i') as create_date			/* 생성 일시	*/
			,a.reg_user_id as create_user_id               /* 생성자 아이디 */
			,a.hpos_cd_grp as parent_code_group              /* 상위 코드 그룹 아이디 */
			,date_format(a.upd_dt, '%Y-%m-%d %H:%i') as update_date			/* 수정 일시	*/
			,a.upd_user_id as update_user_id                /* 수정자 아이디 */
			,us1.user_nm as create_user_name                /* 생성자 명 */
			,us2.user_nm as update_user_name                /* 수정자 명 */
		FROM TB_CD_GRP a
		LEFT OUTER JOIN TB_USER us1 on a.reg_user_id = us1.user_id
		LEFT OUTER JOIN TB_USER us2 on a.upd_user_id = us2.user_id
		<if test="localeCd != null and localeCd != ''">
		LEFT OUTER JOIN TB_CD c on c.CD = a.CD_GRP
		LEFT OUTER JOIN TB_TRANS t on c.CD_ID = t.LNK_ID
			and t.LOCALE_CD = #{localeCd}
		</if>
		<where>
			a.cd_grp = #{codeGroup}
		</where>
	</select>

	<insert id="insertCd" parameterType="kr.co.dsi.system.cd.entity.Cd">
        /*
        SQL ID : kr.co.dsi.system.cd.dao.CdDao.insertCd
        SQL 명: 공통 코드 추가
        */
		<selectKey keyProperty="cdId" resultType="java.lang.String" order="BEFORE">
			SELECT CONCAT('CCD_', LPAD(nextval('cd'), 10, '0'))
		</selectKey>
        INSERT into TB_CD (
    	cd_id
        , cd_grp
        , cd
        , cd_nm
        , cd_vlue
        , cd_dscr
        , cd_idx
        , use_yn
        , reg_dt
        , reg_user_id
        )
        VALUES (
		#{cdId, jdbcType=VARCHAR}
        , #{cdGrp, jdbcType=VARCHAR}
        , #{cd, jdbcType=VARCHAR}
        , #{cdNm, jdbcType=VARCHAR}
        , #{cdVal, jdbcType=VARCHAR}
        , #{cdDescr, jdbcType=VARCHAR}
        , #{cdIdx, jdbcType=INTEGER}
        , #{useYn, jdbcType=VARCHAR}
        , current_timestamp()
        , #{crteUsrId, jdbcType=VARCHAR}
        )
    </insert>

	<update id="updateCd" parameterType="kr.co.dsi.system.cd.entity.Cd">
		/*
		SQL ID : dao.cd.co.kr.b2b.idp.system.CdDao.updateCd
		SQL 명: 공통 코드 수정
		*/
		UPDATE TB_CD
		<set>
			<if test="cdNm != null">
				cd_nm = #{cdNm, jdbcType=VARCHAR},
			</if>
			<if test="cdVal != null">
				cd_vlue = #{cdVal, jdbcType=VARCHAR},
			</if>
			<if test="cdDescr != null">
				cd_dscr = #{cdDescr, jdbcType=VARCHAR},
			</if>
			<if test="cdIdx != null">
				cd_idx = #{cdIdx, jdbcType=INTEGER},
			</if>
			<if test="useYn != null">
				use_yn = #{useYn, jdbcType=VARCHAR},
			</if>
			upd_dt = current_timestamp(),
			upd_user_id = #{updUsrId, jdbcType=VARCHAR}
		</set>
		WHERE cd_grp = #{cdGrp, jdbcType=VARCHAR}
			AND cd = #{cd, jdbcType=VARCHAR}
	</update>

	<delete id="deleteCd" parameterType="java.lang.String">
        /*
        SQL ID : kr.co.dsi.system.cd.dao.CdDao.deleteCd
        SQL 명: 공통 코드 삭제
        */
        DELETE FROM TB_CD
        WHERE cd_id = #{cdId, jdbcType=VARCHAR}
    </delete>

	<insert id="insertCdGrp" parameterType="kr.co.dsi.system.cd.entity.CdGrp">
        /*
        SQL ID : kr.co.dsi.system.cd.dao.CdDao.insertCdGrp
        SQL 명: 그룹 공통 코드 추가
        */
		<selectKey keyProperty="cdGrpId" resultType="java.lang.String" order="BEFORE">
			SELECT CONCAT('GCD_', LPAD(nextval('gcd'), 10, '0'))
		</selectKey>
        INSERT INTO TB_CD_GRP (
          cd_grp_id
        ,cd_grp
        ,cd_grp_nm
        ,cd_grp_dscr
        ,use_yn
        ,reg_dt
        ,reg_user_id
        ,hpos_cd_grp
        )
        VALUES (
		#{cdGrpId, jdbcType=VARCHAR},
        #{cdGrp, jdbcType=VARCHAR},
        #{cdGrpNm, jdbcType=VARCHAR},
        #{cdGrpDescr, jdbcType=VARCHAR},
        #{useYn, jdbcType=VARCHAR},
        current_timestamp(),
        #{crteUsrId, jdbcType=VARCHAR},
        #{hposCdGrp, jdbcType=VARCHAR}
        )
    </insert>

	<update id="updateCdGrp" parameterType="kr.co.dsi.system.cd.entity.CdGrp">
		/*
		SQL ID : dao.cd.co.kr.b2b.idp.system.CdDao.updateCdGrp
		SQL 명: 그룹 공통 코드 수정
		*/
		UPDATE TB_CD_GRP
		<set>
			<if test="cdGrpNm != null">
				cd_grp_nm = #{cdGrpNm, jdbcType=VARCHAR},
			</if>
			<if test="cdGrpDescr != null">
				cd_grp_dscr = #{cdGrpDescr, jdbcType=VARCHAR},
			</if>
			<if test="useYn != null">
				use_yn = #{useYn, jdbcType=VARCHAR},
			</if>
			<if test="hposCdGrp != null">
				hpos_cd_grp = #{hposCdGrp, jdbcType=VARCHAR},
			</if>
			upd_dt = current_timestamp(),
			upd_user_id = #{updUsrId, jdbcType=VARCHAR}
		</set>
		WHERE cd_grp = #{cdGrp, jdbcType=VARCHAR}
	</update>

	<delete id="deleteCdGrp" parameterType="java.lang.String">
        /*
        SQL ID : kr.co.dsi.system.cd.dao.CdDao.deleteCdGrp
        SQL 명: 그룹 공통 코드 삭제
        */
        DELETE FROM TB_CD_GRP
        WHERE cd_grp = #{cdGrp, jdbcType=VARCHAR}
    </delete>

	<select id="selectLtnoList" parameterType="java.lang.String" resultType="kr.co.dsi.system.user.dto.res.UserLntoDto">
		/*
        SQL ID : selectLtnoList
        SQL 명: City List 조회
        */
        SELECT
              B.CD      AS CODE
        	, B.CD_VLUE AS CODE_VALUE
        FROM TB_CD A
        INNER JOIN TB_CD B
        	ON A.CD = B.CD_GRP
        WHERE A.CD_VLUE = #{codeGroup}
        ORDER BY B.CD_IDX
	</select>
</mapper>